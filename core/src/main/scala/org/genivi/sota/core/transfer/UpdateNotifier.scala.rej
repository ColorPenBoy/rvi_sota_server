--- core/src/main/scala/org/genivi/sota/core/transfer/UpdateNotifier.scala
+++ core/src/main/scala/org/genivi/sota/core/transfer/UpdateNotifier.scala
@@ -18,6 +18,9 @@ case class UpdateNotification(packages: Seq[PackageUpdate], services: ServerServ
 
 object UpdateNotifier {
 
+  /**
+   * Notify all affected vehicles of a pending update.
+   */
   def notify(updateSpecs: Seq[UpdateSpec], services: ServerServices)
             (implicit rviClient: RviClient, ec: ExecutionContext, log: LoggingAdapter): Iterable[Future[Int]] = {
     log.debug(s"Sending update notifications: $updateSpecs" )
@@ -25,6 +28,9 @@ object UpdateNotifier {
     updatesByVin.map( (notifyVehicle(services) _ ).tupled  )
   }
 
+  /**
+   * Notify a vehicle of a pending update.
+   */
   def notifyVehicle(services: ServerServices)( vin: Vehicle.Vin, updates: Seq[UpdateSpec] )
                    ( implicit rviClient: RviClient, ec: ExecutionContext): Future[Int] = {
     import com.github.nscala_time.time.Imports._
